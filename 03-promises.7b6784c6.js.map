{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAIMC,EAAOC,SAASC,cAAc,SAG9BC,EAAkBF,SAASC,cAAc,kBACzCE,EAAYH,SAASC,cAAc,iBACnCG,EAASJ,SAASC,cAAc,mBAwBtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAACH,SAAAA,EAAUC,MAAAA,IAEnBG,EAAO,CAACJ,SAAAA,EAAUC,MAAAA,MAEnBA,MA9BPR,EAAKe,iBAAiB,UAGtB,SAA4BC,GAC1BA,EAAIC,iBAIJ,IAFA,IAAIC,EAAQC,OAAOhB,EAAgBiB,OAE1BC,EAAI,EAAGA,GAAKF,OAAOd,EAAOe,OAAQC,IACzCf,EAAce,EAAGH,GAChBI,MAAK,SAAAC,OAAGC,EAACD,EAADC,EAAGhB,EAAKe,EAALf,MACViB,EAAA3B,GAAS4B,OAAOC,QAAS,uBAAgCC,OAARJ,EAAE,QAAYI,OAANpB,EAAM,UAEhEqB,OAAM,SAAAN,OAAGC,EAACD,EAADC,EAAGhB,EAAKe,EAALf,MACXiB,EAAA3B,GAAS4B,OAAOI,QAAS,sBAA6BF,OAARJ,EAAE,QAAYI,OAANpB,EAAM,UAE9DU,GAASC,OAAOf,EAAUgB","sources":["src/js/03-promises.js"],"sourcesContent":["// Import of Notiflix library\nimport Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\n// Search for form.form element\nconst form = document.querySelector(\".form\");\n\n// Input element values\nconst firstDelayInput = document.querySelector('[name=\"delay\"]');\nconst delayStep = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\n// Calling the function after \"submit\" on the \"Create promises\" button\nform.addEventListener(\"submit\", createManyPromises);\n\n// Event handler for making promises\nfunction createManyPromises(evt) {\n  evt.preventDefault();\n\n  let delay = Number(firstDelayInput.value);\n\n  for (let i = 1; i <= Number(amount.value); i++) {\n    createPromise(i, delay)\n    .then(({ i, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${delay}ms`);\n    })\n    .catch(({ i, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${delay}ms`);\n    });\n    delay += Number(delayStep.value);\n  }\n}\n\n// A function that makes a promise\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  });\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDelayInput","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","delay1","Number","value","i1","then","param","i","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.7b6784c6.js.map"}